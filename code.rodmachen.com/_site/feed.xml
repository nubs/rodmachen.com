<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rod Machen</title>
    <description>Rod Machen&#39;s writings on technology and code.
</description>
    <link>http://code.rodmachen.com/</link>
    <atom:link href="http://code.rodmachen.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 22 Apr 2015 10:06:25 -0500</pubDate>
    <lastBuildDate>Wed, 22 Apr 2015 10:06:25 -0500</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>My First Web App</title>
        <description>&lt;p&gt;Months have passed since I first started down the road of learning to code, and lots of learning has taken place. For much of it, though, it has been book learning: tutorials, lectures, or literally reading books. There’s so much to learn that a certain amount of this is inevitable, but it’s come time for me to start making things. This web app is my first step.&lt;/p&gt;

&lt;p&gt;It wouldn’t be fair to say I’ve made nothing over the course of the last year. This web site didn’t build itself (twice), but as far as implementing functionality using javascript fundamentals, I had not dipped my toe in that pool. In going through the interview process for a coding school, I was finally given the shove I needed to head in a more creative and practical direction.&lt;/p&gt;

&lt;p&gt;After not quite cutting mustard on my first interview, I was asked to undertake a project that would show both my ability to take on something substantial and also my knowledge of functional programming in JavaScript. The challenge excited me. This was exactly what I had been looking for. The only problem was, I didn’t have a great idea for it.&lt;/p&gt;

&lt;p&gt;As many have done before, I searched online first. Unsurprisingly, ideas for coding projects are all over the web. Reading these suggestions helped, but I realized quickly that I would have to go closer to home to find the right project. If I was going to spend the recommended 20-40 hours of my free time working on a project, I needed to not only see some value in it, but ideally have it come from a part of my life I’m already invested in.&lt;/p&gt;

&lt;p&gt;While I have no shortage of interests and hobbies I could have incorporated, I instead look at my current line of work. I spend my days teaching English to high schoolers. (This should explain my desire for a new line of work.) EdTech is the hot new thing, and classrooms are ripe with uses for technology. I decided to throw my line into that water.&lt;/p&gt;

&lt;p&gt;What I came up with was “Mr. Machen’s Essay Checker.” (&lt;a href=&quot;http://rodmachen.com/essay-checker-beta/&quot;&gt;rodmachen.com/essay-checker-beta&lt;/a&gt;) The initial idea was for a word counting app, but since that functionality already exists inside every word processor, I expanded it to include specific things that I teach my students about best practices for writing an essay.&lt;/p&gt;

&lt;p&gt;For instance, never use the word “essay” in an essay. This is half pet peeve, half good advice. There’s no need to say you are writing an essay; just write it. That last sentence has two more foibles. Semicolons are hard to use well, but that doesn’t stop my students. Rather than being just another conjunction, the semicolon should be used to connect two sentences in a more nuanced way. It’s not simply “and”; it’s a way of joining two sentences together to add to the meaning of each one. I also point out the use of several 1st- and 2nd- person words that have no place in a standard academic essay.&lt;/p&gt;

&lt;p&gt;Ultimately, this is a toy project that I probably won’t use in practice. In six weeks there will be no more teaching left for me to do. It does marry my past and present with my future and gave me a chance to explore the world of making web apps. The planning and complexity piece was especially instructive. It took several iterations to figure out how best to write my functions. Eventually, I had an “a-ha” moment in which I figured out how to break them down into smaller functions that each do one thing. From there I was able to pass them into each other, and even return functions, creating a factory for new functions.&lt;/p&gt;

&lt;p&gt;I know I barely scratched the surface of what I’ll do someday with production-level web applications. This project didn’t even have a back end, but I know adding one is something I could certainly do if I put forth the same level of effort and research I did for the front end. This project might just stay in beta, but I’ve come away a better developer because of it.&lt;/p&gt;

&lt;p&gt;Next step: find my next app to build.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Apr 2015 00:00:00 -0500</pubDate>
        <link>http://code.rodmachen.com/my-first-web-app/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/my-first-web-app/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>My First Austin on Rails</title>
        <description>&lt;p&gt;I’ve been going to meet ups for a while, but I’ve never gotten around to visiting Austin on Rails. This makes sense when you consider I’m not learning Rails, or Ruby for that matter. It’s reputation is top notch, however, and I’ve met Damon Clinkscales on a couple of occasions. This week was all lightning talks, and a few piqued my interest, so off I went, braving actual-winter weather in usually winter-less Austin. Here’s what jumped out at me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tim Tyrrell on React.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tim’s a trip. He did his damnedest to squeeze 30 minutes of material into five, and the audience got a kick out of it. The stuff he did get to was good. I’m just learning what React is all about, and Tim shared some of the nuts and bolts of using Facebook’s up-and-coming framework. I’m sure I’ll give it a crack some day, and I’m also sure that if I’d talked to Tim for any longer than I did, he would have convinced me to come to the next local React meet up. Maybe next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brandon Hays on the Asset Pipeline&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Brandon is a guy I’ve known about for a long time but had never met. He appears regularly on Kyle Simpson’s Twitter feed, even though he’s ostensibly a Ruby guy. His talk was about the asset pipeline and the multitude of build tools available to the modern dev. I can sympathize with how overwhelming it can be. I use Grunt, but didn’t create my own set up. I pretty much just know how to serve it locally and build before pushing my code. And to top it off, if I ever dedicate myself to learning one of these tools, it’ll probably be Gulp. Brandon introduced a new player I had never heard of: Ember-cli. He’s an Ember guy (I’m sure he could rope me into that meet up, too) so he’s obviously used this one a bit. It’s fascinating that these frameworks are spawning build tools now. Everything’s its own environment, I suppose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alejo Rivera on Learning Techniques&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This relative newcomer to the development game (though still a seasoned veteran compared to me) shared three resources for learning new skills: podcasts, book clubs, and learning streaks. I learned of a couple new podcasts from this talk, like Giant Robots and the Bike Shed. These are Ruby-centric, but I still found some episodes worth downloading. Alejo’s book clubs are often several people each reading a different book on the same subject. Seems like a good way to learn. The learning streak is definitely good advice. It works for Jerry Seinfeld!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Randy (@randito) on . . . Installing Wood Floors?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yep, we had a home improvement segment right in the middle of a bunch of tech talks. Turns out, it was a metaphor! Like anything worthwhile, the installation of flooring is hard. Web development is similarly hard. Both can be accomplished by following some of the same practices: know your materials, keep a steady pace, don’t give up. Nice talk with both words of wisdom and a touch of inspiring rhetoric. From a guy named Randito.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nola Stowe on Jekyll&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Easily my favorite talk of the night, because I actually know Jekyll! Nola has recently helped reboot the Austin on Rails web site and decided to use Jekyll. She went through some of the technical components of setting up a site using Jekyll as well as some of its advantages over Wordpress and the like. This was an empowering talk for me to hear, because it showed me that the things I have learned on my journey learning to code are things other people might actually want to hear about. Now, I just have to get myself up there behind the podium one of these nights. Hoo boy.&lt;/p&gt;

&lt;p&gt;The talks by Nathan Ladd John Dalton were probably great, but they were firing way over my head. I finally got to hear Nick McDonnough talk about Clojure, and Chad Bailey talked  JSON in Postgres. He was even nice enough to talk about the basics of databases with me afterward.&lt;/p&gt;

&lt;p&gt;All in all, a good night. Maybe next time I’ll wonder down to 6th Street for some socialization afterward. This seems like a good group for that.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Feb 2015 00:00:00 -0600</pubDate>
        <link>http://code.rodmachen.com/my-first-austin-on-rails/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/my-first-austin-on-rails/</guid>
        
        <category>meetups</category>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Hack Reactor + Frontend Masters</title>
        <description>&lt;p&gt;Sometimes things just drop into your lap. That happened to me this week  with a JavaScript resource so perfectly timed as to make it seem–I don’t know–divine?&lt;/p&gt;

&lt;p&gt;On Monday I got the news that my first technical interview with Hack Reactor for their Remote Beta program didn’t go as well as I would have liked. I wasn’t granted admission, but instead advised to study for another month and then try again. Instead of being discouraged, I was encouraged and sought out the best way for me to spend the next four weeks.&lt;/p&gt;

&lt;p&gt;Along came a serendipitous tweet across my timeline. Frontend Masters announced an upcoming class from Kyle Simpson (Getify). That piqued my curiosity, so I went to look at their offerings. There, at the top of the page, was exactly what I had been looking for.&lt;/p&gt;

&lt;p&gt;Less than a month ago, Frontend Masters published a course called “JavaScript: From Fundamentals to Functional JS.” The kicker? It was from Hack Reactor. After doing a little research, I learned that this was essentially their “Hack Reactor Jr.” course that they teach on nights and weekends to help people get admitted to the school. Not only that, it was taught by one of the instructors from that program, Bianca Gandolfo.&lt;/p&gt;

&lt;p&gt;The main area I need to study is higher-order functions. Low-level functional programming, essentially. I had been reading up on closures, callbacks and the like, but it obviously wasn’t enough. The interview showed me the limits of my knowledge. I knew what a callback was, but wasn’t comfortable calling a function with another function. The passing of variables back and forth really messed me up.&lt;/p&gt;

&lt;p&gt;That was Monday. Fast forward to this weekend, and I’ve finished the course. It’s over seven hours long and was recorded over two days. I’m glad I had longer to complete it so the concepts could soak it. The exercises at the end of each section were just challenging enough to push me without pulling me under.&lt;/p&gt;

&lt;p&gt;Given how excited I was to see this course offering, Frontend Masters monthly fee of $40  seemed exceedingly reasonable. I’m now looking at which course to try next as I continue to master functions in JavaScript. It looks like Getify’s “Advanced JavaScript” and Douglas Crockford’s “JavaScript the Good Parts” will fit the bill.&lt;/p&gt;

&lt;p&gt;Just 12 more hours of JavaScript. No big deal.&lt;/p&gt;

&lt;p&gt;Now, back to work.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Feb 2015 00:00:00 -0600</pubDate>
        <link>http://code.rodmachen.com/hack-reactor-frontend-masters/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/hack-reactor-frontend-masters/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Learning Functions from ‘Single Page Web Applications’</title>
        <description>&lt;p&gt;A couple of books have made their way into my orbit lately, and they both involved web applications. In my quest to Learn to Code, I’ve been stuck in the theoritical for a while now, and I’m jonesing to build something. Creating this web site was a good exercise, but while it involved plenty of tools I’ll use as a developer, it didn’t require much coding. Now, I want to start building.&lt;/p&gt;

&lt;p&gt;My journey thus far mirrors the (wrongheaded) way I might learn a foreign language. I’ve spent weeks (sadly, more like months) learning how to conjugate verbs and match tense, but I’ll be damned if I could hold a conversation. In JavaScript terms, I know the basics of arrays, functions, objects, etc., but I can’t just sit down and build something. I’ve started to experiment with different coding-practice sites, but eventually I’ll want to be able to do more than solve homework problems. I have to admit, that solving something like FizzBuzz does give a little jolt to the little coder inside me.&lt;/p&gt;

&lt;p&gt;In pursuit of this, I’ve been looking at two books, &lt;a href=&quot;http://learningwebappdev.com/&quot;&gt;Learning Web App Development&lt;/a&gt; by Semmy Purewal and &lt;a href=&quot;http://www.manning.com/mikowski/&quot;&gt;Single Page Web Applications&lt;/a&gt; (SPWA) by Michael Mikowski and Josh Powell. I’ll have more to say about the former another time, but the latter has been useful to me for an altogether different reason.&lt;/p&gt;

&lt;p&gt;I’ve had a goal lately to learn more about functions (shhh, more to come), and one of the best resources I’ve found was SPWA. Before they get into the business of building the app itself, Mikowski and Powell give a little JS primer to their audience. This wasn’t just another condensed beginner textbook; it explicated the how’s and wherefore’s of the topic with aplomb. Aplomb, I tell you! I knew a decent bit about functions for someone who hasn’t had to put them to work, but this book took it to a &lt;a href=&quot;https://www.youtube.com/watch?v=zAUOxQyxKv0&quot;&gt;whole&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=LLgmR-HCCW0&quot;&gt;‘nother&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=YJnGRuidOXI&quot;&gt;level&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One example to concretize my praise: when addressing variable hoisting within a function, I had never understood that the variable declaration gets hoisted, but the variable definition doesn’t occur until the statement itself. This is a small thing, but the nuance had been lost on me until now. That was one of a dozen ‘a-ha’ moments I had reading this chapter.&lt;/p&gt;

&lt;p&gt;Now it goes back up on the proverbial shelf until I’m ready to attack the meat of the book and build a single page web app. Here’s to hoping that happens sooner rather than later.&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Jan 2015 00:00:00 -0600</pubDate>
        <link>http://code.rodmachen.com/SPWA/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/SPWA/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>We Are Live!</title>
        <description>&lt;p&gt;It’s morning in America, and I’ve migrated over to a new web site, one of my own creation. It’s been a long time coming, but it’s finally here.&lt;/p&gt;

</description>
        <pubDate>Thu, 04 Dec 2014 00:00:00 -0600</pubDate>
        <link>http://code.rodmachen.com/we-are-live/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/we-are-live/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>A New Jekyll Beginning</title>
        <description>&lt;p&gt;After using Jekyll for this blog over the last month–having been introduced to it in my MakerSquare class–I’ve found a new way to use it: Prose.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://prose.io&quot;&gt;Prose&lt;/a&gt; is an online editor for use with Github. It’s especially good with Jekyll, and that’s how I’ll use using it. I was content to use my text editor and command line interface, but if this project is going to proceed into the future, the easier the better. When I’m at work, I have a laptop that isn’t set up with my development environment, and being able to create and alter posts online will be extremely useful.&lt;/p&gt;

&lt;p&gt;Getting started with Prose wasn’t easy. Or at least, it wasn’t as easy as I thought it would be. As always, reading the directions helps. When I first logged in, I was able to go to my blog repo and create a post. However, it gave me problems when trying to publish. After doing a little research, I found out that I needed to have established some Prose settings in my config.yml file. There are a ton of options laid out &lt;a href=&quot;https://github.com/prose/prose/wiki/Prose-Configuration&quot;&gt;here&lt;/a&gt;. I designated which repo I always wanted to  start with and what layout I would use. The title had been formed by the file name, but I reversed that. I also set it to publish automatically unless I unchecked the appropriate box.&lt;/p&gt;

&lt;p&gt;I now have an online editor that will let me create posts in markdown and commit them directly to my blog’s repo. Within a few seconds, they appear on the blog itself. Works for me.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Nov 2014 00:00:00 -0600</pubDate>
        <link>http://code.rodmachen.com/a-new-jekyll-beginning/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/a-new-jekyll-beginning/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>A Successful Reboot</title>
        <description>&lt;p&gt;Today has been a bit of a rebound day for me. After hitting some pretty sizable bumps on the road to completing my MakerSquare final project, things are finally falling into place.&lt;/p&gt;

&lt;p&gt;Where things stand: I have created a framework for my web presence. A main page (www.rodmachen.com) will link to a page for my writing (rodmachen.com/words), my coding/tech stuff (rodmachen.com/code), and my photography (rodmachen.com/photo). This project is focused on the later, but I realized during Monday’s class that I need a look that will tie all of them together. I’ve decided that thing is a navigation bar along the top, jet-black with menus for getting around. I’d like to find a common footer as well. Since I’m using Foundation as my base, I found a template to start off with and am working to modify it. I copied the nav bar to all of my pages and have been playing around with it quite a bit.&lt;/p&gt;

&lt;p&gt;Bottom line: I have a placeholder main page, a working photography index, and a working gallery, complete with lightbox plugin. Not bad considering how things were looking the other day.&lt;/p&gt;

&lt;p&gt;Thinking back on the problems: Sunday night my project broke. I had been running a local server and viewing all of my changes that way. Making a gh-pages branch on Github was the next step. The branch itself was easy enough, but something was wrong. All of my styling and JavaScript was missing. Turns out the .gitignore file included all of Foundation’s Bower components so none of that had been uploaded. An easy enough fix, right? Fast forward a couple of commits. Only a small part of this folder had been uploaded and the rest had virtually disappeared from my local repo. I had all of the Bower folders but none of the contents.&lt;/p&gt;

&lt;p&gt;I gave up. My instructors would rescue me, and sure enough, between Mae and Flip, we rolled back my commits to the point where it was working again. At that point I was done with gh-pages and am using Amazon S3 to host. That worked like a charm. Updating is a bit of a pain, but my site is small enough that it’s fine. I’ll get some type of deployment scheme up and running eventually, but for this project, working is working.&lt;/p&gt;

&lt;p&gt;Almost exactly one week from now, I’ll present my project. More that likely it’ll fall short of what I had originally intended, but because this is my real web site, I’ll continue to work on it going forward.&lt;/p&gt;

&lt;p&gt;The takeway for me is this: Move forward incrementally. When I got to a place where I was trying to ingest too many different technologies at once, I got overwhelmed. I need to slow down and take the time to get comfortable with something before adding something else to my plate. Right now getting better at git and Foundation is enough. There are plenty of things to keep me busy after that, to be sure.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Nov 2014 00:00:00 -0600</pubDate>
        <link>http://code.rodmachen.com/a-successful-reboot/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/a-successful-reboot/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>The Final Project Countdown</title>
        <description>&lt;p&gt;I’m in the homestretch of my &lt;a href=&quot;http://www.makersquare.com&quot;&gt;MakerSquare&lt;/a&gt; class. We’re taking all of the front-end technologies we’ve learned and  putting them to use in self-selected final project.&lt;/p&gt;

&lt;p&gt;From early on, redoing my web presence was a priority for me, and for this project, I’ve chosen to build a new photography portfolio site. My previous version uses Wordpress, but for this one, I wanted to move away from that platform. There’s no need for a back end of any kind, so a static site is perfect.&lt;/p&gt;

&lt;p&gt;I thought I might marry Foundation to Jekyll. The latter’s templating functionality could be good for adding future pages, but I ran into some initial problems with setting up those templates. Honestly, I still don’t have enough of a grasp on Jekyll to be tweaking it, so instead of use my time on that, I’m going to go with a straight Foundation site.&lt;/p&gt;

&lt;p&gt;The first big decision was picking a display format for the images. I never liked the lightbox plugin I used on WP, but I stumbled upon a better one recently, &lt;a href=&quot;http://terrymun.github.io/Fluidbox/&quot;&gt;Fluidbox&lt;/a&gt;. It replicates the imagefunctionality of Medium.com. A click on any embedded image brings up a full-sized version, front and center. I thought this is what I was going to go with, but it does fit well with my portfolio which is organized in galleries. There was no way to rotate through a set of images, just one at a time. Fluidbox would be great for other pages, and I might use it for my writing site.&lt;/p&gt;

&lt;p&gt;This recent &lt;a href=&quot;http://codegeekz.com/jquery-lightbox-plugins-beautifying-websites/&quot;&gt;article&lt;/a&gt; lists 20 jQuery lightbox plugins, and it was here that I found &lt;a href=&quot;http://brutaldesign.github.io/swipebox/&quot;&gt;Swipebox&lt;/a&gt;. It’s distinguishing feature is the ability to swipe from images to image on a mobile device, but I like it because of its dead-simple interface. It blacks out the rest of the page, and the navigation arrows and caption fade away, leaving the viewer with a full-screen experience.&lt;/p&gt;

&lt;p&gt;My extension project is to modify this plug in to offer additional functionality. I’m going to go through the code and see what I can do. This would give me a chance to test my JavaScript chops a bit. This’ll be my first time to fork a project on Github and start working under the hood. I hope to have a lot more of this in my future.&lt;/p&gt;

&lt;p&gt;As of now, I have my main page set up with placeholder thumbs and one gallery made. I used FitText to make my Garamond heading nice and big. It’s minimal and sleek, pushing the viewer toward the images themselves. Tomorrow I’ll go back to class for some feedback and work time. A week and a half from now I’ll be presenting. Lots of work to do until this.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Nov 2014 00:00:00 -0500</pubDate>
        <link>http://code.rodmachen.com/the-final-project-countdown/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/the-final-project-countdown/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>A Typical Day</title>
        <description>&lt;p&gt;Today was the perfect day of coding. Completely typical for this enterprise. Typical in that I attempted to complete a task, ran into a bunch of obstacles, and had to keep plugging away. In other words, what I’ll spend half of my time doing as a professional developer.&lt;/p&gt;

&lt;p&gt;I decided to experiment with adding an image slider to my Foundation test project. Orbit used to be the standard one, but it’s been depricated. Slides.js was suggested, and I gave it a go. The details really don’t matter, but it was a combination of things that led to my problems. What’s funny is, as I chased the error-rabbit, I found several things that were wrong. I’d fix one, thinking it was the problem, but there’d be another problem higher up the chain. Correctly spelling the path to an image is important, but so is making sure the correct CSS and JS files are being linked, even if they’re in different places than the documentation says they’ll be. I backed into a great debugging tool, the JavaScript console for telling me which files weren’t loading correctly.&lt;/p&gt;

&lt;p&gt;It’s these experiences that will teach me the most. I know that. My patience-muscle must be exercised if I’m going to build it up for the long haul. I have to not give up because things will fall into place if I keep at it. Might take a while, but that’s the way these things go.&lt;/p&gt;

&lt;p&gt;One more thing: I still don’t have a working slider. The errors are gone, but it’s not displaying correctly. On to another day.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Oct 2014 00:00:00 -0500</pubDate>
        <link>http://code.rodmachen.com/a-typical-day/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/a-typical-day/</guid>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>Responsive Web Design and Foundation</title>
        <description>&lt;p&gt;Tonight was the first time I have actually prepped for class. Usually, I’m lucky to show up with a working brain, but I had a little more time this weekend than usual.&lt;/p&gt;

&lt;p&gt;Some of that prep was completing old homework. I knew we were starting on &lt;a href=&quot;http://foundation.zurb.com/&quot; title=&quot;Zurb Foundation&quot;&gt;Foundation&lt;/a&gt; tonight, so I figured I should finally finish my CSS grid assignment. I got stuck, but luckily Clare helped me out before class in finishing it up. Glad she did, because a lot of that came into play as the night went on.&lt;/p&gt;

&lt;p&gt;Like any good obsessive, I spent a ton of time Googling information not only about Foundation, but also frameworks in general. I now know the name of a half dozen different ways to make a gridded web site. One in particular, &lt;a href=&quot;http://gumbyframework.com/&quot; title=&quot;Gumby&quot;&gt;Gumby&lt;/a&gt;, has me intrigued. I might have to play with it after class is over. For now, Foundation.&lt;/p&gt;

&lt;p&gt;We started class by talking about responsive web design. I knew the basics, but it was good to hear the details of how to go about making such a site, especially the “mobile first” mantra. It gave me a lot to think about for my final project.&lt;/p&gt;

&lt;p&gt;We then downloaded Foundation and got it set up. From there, we finished it out with work on the newspaper project. Easily the homework assignment I’m most looking forward to. I think I’ll have a good grasp of Foundation basics after this.&lt;/p&gt;

&lt;p&gt;Mae didn’t want to go with the Sass version, and that’s probably best at this point. However, I know I’m going to learn it at some point. I’m convinced that I want to be proficient in building web sites, and using pre-existing tools is going to be a part of that. I don’t need to build from scratch when I can get 90% of the value out of these frameworks and libraries. Where I want to put my energy is into learning languages and programming fundamentals. This stuff is just to baseline of knowledge about front-end site creation.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Oct 2014 00:00:00 -0500</pubDate>
        <link>http://code.rodmachen.com/rwd-and-foundation/</link>
        <guid isPermaLink="true">http://code.rodmachen.com/rwd-and-foundation/</guid>
        
        
        <category>code</category>
        
      </item>
    
  </channel>
</rss>
